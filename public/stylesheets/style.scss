$transparent: rgba(255, 255, 255, 0);
$baseColor: #5f6d6d;
$darkBaseColor: #515a5a;
$controlDisabled: rgba(0, 0, 0, 0.38);
$controlEnabled: rgba(0, 0, 0, 0.54);
//$controlFocus: rgba(0, 0, 0, 0.87);
$controlFocus: white;
$controlFocusWithin: rgba(0, 0, 0, 0.87);
$baseBorderColor: rgba(0,0,0,.15);
$baseColor2: #E0E4E4;

$baseGreen: #4da241;
$baseOrange: #efbe3c;
$baseRed: #d34545;
$baseBlue: #3b6b94;
$baseYellow: rgba(246, 225, 132, 1);
$baseWhite: white;
$baseGray: gray;
$baseBlack: black;

$strongGreen: #188209;
$strongOrange: #ffa500;
$strongRed: #dc2828;
$strongBlue: #004b8b;

$basePageBackground: #c1caca;
$baseLightGray: $baseBorderColor;

$baseBoxShadow: 0 0 13px 1px rgba($baseColor, 0.7);
$baseBorder: 1px solid $baseBorderColor;
$activeBoxShadow: 0 1px 3px 0 $controlDisabled;
$lightBoxShadow: 0 5px 13px 1px rgba($baseColor, 0.44);
$maxWorkWith: 1500px;
$baseWidth: 95%;

@mixin delay($duration) {
    -o-animation-delay: #{$duration}s;
    -moz-animation-delay: #{$duration}s;
    -webkit-animation-delay: #{$duration}s;
    animation-delay: #{$duration}s;
    opacity: 0;
    max-height: 0;
    padding: 0;
}

@mixin iterationCount($value) {
    -moz-animation-iteration-count: $value;
    -o-animation-iteration-count: $value;
    -webkit-animation-iteration-count: $value;
    animation-iteration-count: $value;
}

@mixin create0FadeInOutKeyFrames() {
    display: none;
    max-height: 0;
    opacity: 0;
    padding-top: 0;
    padding-bottom: 0;
    color: rgba(255, 255, 255, 0);
}

@mixin create1FadeInOutKeyFrames() {
    display: block;
    max-height: 0;
    opacity: 1;
    color: rgba(255, 255, 255, 0);
}

@mixin create30FadeInOutKeyFrames() {
    max-height: 999px;
    opacity: 1;
    padding: 15px;
    color: white;
}

@mixin create70FadeInOutKeyFrames() {
    max-height: 999px;
    opacity: 1;
    padding: 15px;
    color: white;
}

@mixin create99FadeInOutKeyFrames() {
    display: block;
    max-height: 0;
    opacity: 1;
    color: rgba(255, 255, 255, 0);
}

@mixin create100FadeInOutKeyFrames() {
    display: none;
    max-height: 0;
    opacity: 0;
    padding-top: 0;
    padding-bottom: 0;
    color: rgba(255, 255, 255, 0);
}

@mixin timingFunction($value) {
    -moz-animation-timing-function: $value;
    -o-animation-timing-function: $value;
    -webkit-animation-timing-function: $value;
    animation-timing-function: $value;
}

@mixin transform($value) {
    -moz-transform: $value;
    -ms-transform: $value;
    -o-transform: $value;
    -webkit-transform: $value;
    transform: $value;
}


@mixin fillMode($type) {
    -moz-animation-fill-mode: $type;
    -o-animation-fill-mode: $type;
    -webkit-animation-fill-mode: $type;
    animation-fill-mode: $type;
}


@mixin duration($duration) {
    -moz-animation-duration: #{$duration}s;
    -o-animation-duration: #{$duration}s;
    -webkit-animation-duration: #{$duration}s;
    animation-duration: #{$duration}s;
}

@mixin animation($name) {
    -moz-animation-name: $name;
    -o-animation-name: $name;
    -webkit-animation-name: $name;
    animation-name: $name;
}

@mixin createButtonColor($value, $name) {
    .#{$name} {
        background-color: rgba($value, .9);
        color: white;
        font-size: 15px;

        .span {
            color: white;
        }

        &:hover {
            /*background-color: rgba($value, .87);*/
            cursor: pointer;
            box-shadow: $baseBoxShadow;
        }

        &.kpDisabled {
            background-color: rgba($value, .38);
            border: 1px solid rgba(0,0,0,.15);
            cursor: not-allowed;
            color: gray;

            &.mdi-light:before {
                color: gray;
            }

            &:hover {
                /*background-color: rgba($value, .87);*/
                box-shadow: none;
            }
        }
    }

    .#{$name}-inverted {
        border: none;
        //background-color: white;
        color: rgba($value, .9);
        font-size: 15px;
        font-weight: bold;
        /*.span {
            color: white;
        }*/
        &:hover {
            background-color: lightgray;
            cursor: pointer;
            //box-shadow: 0 0 13px 1px rgba(81, 90, 90, 0.7019607843137254);
        }

        &.kpDisabled {
            background-color: rgba($value, .38);
            border: 1px solid rgba(0,0,0,.15);
            cursor: not-allowed;

            &:hover {
                /*background-color: rgba($value, .87);*/
                box-shadow: none;
            }
        }
    }
}

@mixin iteration($name, $value) {
    .#{$name}#{$value} {
        @content;
    }
}

@mixin iteration($name, $value) {
    .#{$name}#{$value} {
        @content;
    }
}

@mixin createDelay($from, $to) {
    @for $i from $from through $to {
        @include iteration(animationDelay, $i) {
            @include delay($i);
        }
    }
}

@mixin createDuration($from, $to) {
    @for $i from $from through $to {
        @include iteration(animationDuration, $i) {
            @include duration($i);
        }
    }
}

@mixin keyframes($name) {
    @-webkit-keyframes #{$name} {
        @content;
    }

    @-moz-keyframes #{$name} {
        @content;
    }

    @-ms-keyframes #{$name} {
        @content;
    }

    @keyframes #{$name} {
        @content;
    }
}

body{
    background-color: #a6c1c1a3;
    font-family: sans-serif;
}

.textBox {
    @extend %textBoxBase;

    &:enabled {
        @extend %foreColor;
    }

    &:disabled {
        @extend %backColorDisabled;
    }
}

.nofloatGroup {
    display: flex;
    width: 48%;
    padding-top: 5px;
    padding-bottom: 5px;
    padding-left: 1%;
    padding-right: 1%;
    align-items: center;
    overflow: auto;

    &.double {
        width: 98%;

        .label {
            width: 10%;
        }
    }

    &.noWhiteSpace {
        padding-left: 0;
    }


    .label {
        pointer-events: none;
        color: #515a5a;
        background: white;
        padding-left: 3px;
        width: 20%;
        min-width: 140px;
    }
}

.noWhiteSpace {
    padding-top: 0;
    padding-bottom: 0;
}

.floatGroup {
    padding-left: 1%;
    padding-right: 1%;
    display: flex;
    padding-top: 5px;
    padding-bottom: 5px;
    overflow: auto;
}

.floatControl {
    &.noFixHeight {
        height: auto;
    }
}

.floatLabel {
    position: absolute;
    transform-origin: top left;
    transform: translate(5px, 10px) scale(1);
    transition: all .1s ease-in-out;
    color: rgba(81, 90, 90, 0.76);
    pointer-events: none;

    &.outset {
        font-weight: bold;
        /*color: #4e799e;*/
        color: #515a5a;
        transform: translate(5px, -8px) scale(1);
        /*background: white;*/
        // background-image: linear-gradient(white 9px, transparent 7px);
        padding-left: 3px;
        padding-left: 3px;
    }
}

.floatControl {
    width: auto;
    height: 35px;
    padding: 6px;

    &:focus {
        background-color: transparent;
    }
}

.collapsibleHeader {
    //color: #444;
    cursor: pointer;
    padding: 18px;
    /*width: 100%;*/
    text-align: left;
    outline: none;
    font-size: 15px;

    //background-color: rgba(59, 107, 148, 0.11);
    .titleText {
        background-color: transparent;

        &:after {
            content: '\02795';
            font-size: 13px;
            //color: white;
            //color: rgba(59, 107, 148, 0.69);
            float: right;
            margin-left: 5px;
            vertical-align: middle;
            margin-top: 5px;
        }

        &.active {
            &:after {
                content: "\2796";
                //color: rgba(59, 107, 148, 0.69);
            }
        }
    }
}

.collapsibleContent {
    padding: 0 18px;
    background-color: white;
    max-height: 0;
    transition: max-height 0.2s ease-out;
    overflow-x: auto;
    overflow-y: hidden;
}

.titleText {
    //@extend %backColorDark;
    /*@extend %textStyle;*/
    font-size: 14pt;
    font-weight: bold;
    //background-color: $baseWhite;
    padding: 4px;
    float: left;
}

.label {
    @extend %foreColor;
    @extend %textStyle;
    width: auto;

    &-faded {
        opacity: 0.7;
    }

    &-footer {
        @extend %textStyle;
    }
}

%control {
    &:disabled {
        color: $controlEnabled;
        cursor: not-allowed;
        background-color: rgba($baseLightGray, 0.05);
    }

    &:enabled {
        color: $controlEnabled;
    }

    &:focus { 
        color: $controlFocus;
        background-color: white;
        outline: none;
    }

    &:focus-within {
        color: $controlFocusWithin;
    }

    &:required:invalid {
        border-left: 2px solid $baseRed;
        padding-left: 2px;
    }

    &:required:valid {
        border-left: 2px solid $baseGreen;
        padding-left: 2px;
    }
}

%foreColor {
    color: $darkBaseColor;
}

%foreColorDark {
    color: $darkBaseColor;
}

%backColor {
    background-color: $basePageBackground;
}

%backColor2 {
    background-color: $baseColor2;
}

%backColorDark {
    background-color: $baseColor;
}

%backColorWhite {
    background-color: $baseWhite;
}

%backColorLight {
    background-color: $baseLightGray;
}

%backColorDisabled {
    background-color: rgba($baseLightGray, 0.05);
    //color: $controlEnabled;
}

%textStyle {
    font-family: FrutigerNextLT-Light, sans-serif;
    font-size: 14px;
}

%textBoxBase {
    @extend %control;
    border: $baseBorder;
}

%baseTransition {
    -moz-transition: top 0.3s;
    -o-transition: top 0.3s;
    -webkit-transition: top 0.3s;
    transition: top 0.3s;
}

%collapsibleContent {
    display: flex;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: -o-flex;

    &:hover {
        display: flex;
        display: -webkit-flex;
        display: -moz-flex;
        display: -ms-flexbox;
        display: -o-flex;
    }
}

%halfOpacity {
    opacity: 0.7;
}

@include createButtonColor($darkBaseColor, btnNeutral);
@include createButtonColor($baseGreen, btnSuccess);
@include createButtonColor($baseOrange, btnWarning);
@include createButtonColor($baseRed, btnDanger);
@include createButtonColor($baseBlue, btnCreate);
@include createButtonColor($strongOrange, btnStrongWarning);


.mdi-19px.mdi-set, .mdi-19px.mdi:before {
    font-size: 19px;
    margin: 1px;
}

.inRow {
    font-size: 14px;
    padding: 4px;
}



.iconButton {
    border: $baseBorder;
    min-height: 21px;
    padding: 2px 3px 2px 3px;
    /*padding: 7px 4px 4px 4px;*/
    text-decoration: none;
    font-weight: normal;
    margin: 1px;
    outline: 0 none;
    display: inline-flex;
    align-items: center;

    &:disabled {
        border: $baseBorder;
        cursor: not-allowed;
        color: gray;

        .mdi-light {
            color: gray;
        }
    }

    /*&:hover {
        &:before {
            -webkit-animation: mdi-spin 0.4s 1 linear;
            -moz-animation: mdi-spin 0.4s 1 linear;
            -o-animation: mdi-spin 0.4s 1 linear;
            animation: mdi-spin 0.4s 1 linear;
        }
    }*/
}

.grid {
    display: table;
    border-collapse: separate;
    border-spacing: 0px;
    border-color: grey;
    @extend %foreColor;
    @extend %textStyle;
    background-color: transparent;
    border-bottom-width: thin;
    margin-top: 5px;

    &:enabled {
        @extend %foreColor;
    }

    td {
        border: 1px solid $baseWhite;
        border-left: none;
        border-right: none;
    }

    th {
        border-right: 1px solid $baseWhite;
    }

    tr {
        height: 32px;
        padding: 2px;

        &:hover {
            /**/
        }
    }

    .gridPager {
        /*display: inline-block;*/
        padding-left: 0;
        margin: 20px 0;
        border-radius: 4px;

        table {
            float: right;
        }

        table > tbody > tr > td {
            display: inline;
        }

        table > tbody > tr > td > a,
        table > tbody > tr > td > span {
            position: relative;
            float: left;
            padding: 8px 12px;
            line-height: 1.42857143;
            text-decoration: none;
            color: rgba($darkBaseColor, .9);
            font-weight: bold;
            background-color: $baseWhite;
            border: 1px solid #dddddd;
            margin-left: -1px;
        }

        table > tbody > tr > td > span {
            position: relative;
            float: left;
            padding: 8px 12px;
            line-height: 1.42857143;
            text-decoration: none;
            margin-left: -1px;
            z-index: 2;
            color: $baseBlue;
            background-color: $baseLightGray;
            border-color: #dddddd;
            cursor: default;
        }
    }
}

.gridHeader {
    @extend %backColorDark;
    color: $baseWhite;
    font-weight: bold;
    text-align: left;

    th {
        padding: 2px;
        text-align: left;
    }
}

.gridBody {
    background: $baseWhite;
}

.gridRow {
    background-color: $baseWhite;
    border: none;

    &:hover {
        -webkit-filter: drop-shadow(0 0 0.75rem rgba(0, 0, 0, 0.23));
        filter: drop-shadow(0 0 0.75rem rgba(0, 0, 0, 0.23));
    }
}

.gridAlterRow {
    @extend %backColor2;
    border: none;

    &:hover {
        -webkit-filter: drop-shadow(0 0 0.75rem rgba(136, 136, 136, 0.78));
        filter: drop-shadow(0 0 0.75rem rgba(136, 136, 136, 0.78));
    }
}

.gridSelectedRow {
    background-color: rgba($strongGreen, 0.55);
    font-weight: bold;
}